# Use this docker compose file to easily install the CasterDashboard in a docker environment
# Modify the marked lines according to your needs!

version: '3'

services:
  postgres:
    image: postgres:14.3-alpine
    volumes:
      - postgres_data:/var/lib/postgresql/data
    environment:
      - POSTGRES_USER=caster_dashboard_2
      - POSTGRES_PASSWORD=caster_dashboard_2
      - POSTGRES_DB=caster_dashboard_2
      

  redis:
    image: redis:7.0.0-alpine
    
  
  nginx: # Reverse proxy
    image: ghcr.io/sthorsten/casterdashboard2-nginx:develop
    volumes:
      - static_files:/nginx/static
      - media_files:/nginx/media
    ports:
      - 80:80 # Set the exposing host port - e.g. 3000:80
    depends_on:
      - frontend
      - backend

  frontend: # Nuxt frontend
    image: ghcr.io/sthorsten/casterdashboard2-frontend:develop
    command: sh /frontend/docker-start.sh
    volumes:
      - static_files:/frontend/static_files
    environment:
      - NUXT_HOST=0.0.0.0
      - BASE_URL=https://example.com # Set your public url, e.g. https://example.com
      - BROWSER_BASE_URL=https://example.com # Set your public url, e.g. https://example.com (the same as above)
      - WS_BASE_URL=wss://example.com # Set your public url for websockets, e.g. wss://example.com


  backend: # Django backend
    image: ghcr.io/sthorsten/casterdashboard2-backend:develop
    volumes:
      - static_files:/backend/static
      - media_files:/backend/media
    command: sh /backend/docker-start.sh
    environment:
      - SECRET_KEY=django-secret-12345 # Generate a secret key for your instance and set it here
      - ALLOWED_HOSTS=example.com # Set your public url (without http(s))
      - REGISTRATION_ENABLED=false # Allow new users to register
    depends_on:
      - postgres
      - redis


volumes:
  postgres_data:
  static_files:
  media_files:
