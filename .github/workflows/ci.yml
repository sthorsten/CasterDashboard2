name: Test & Build Docker

on:
  push:
    branches:
      - develop

jobs:

  test-backend:
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && github.actor != 'dependabot[bot]'

    services:
      redis:
        image: redis
        options: >-
          --health-cmd "redis-cli ping"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 6379:6379  

    steps:
      - uses: actions/checkout@v3

      - name: Setup python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'

      - name: Setup poetry
        working-directory: ./backend
        run: |
          curl -sSL https://install.python-poetry.org | python3 - --version 1.1.13 \
          && $HOME/.local/bin/poetry config virtualenvs.in-project true

      - name: Install dependencies
        working-directory: ./backend
        run: |
          $HOME/.local/bin/poetry install
          cp .env.testing .env

      - name: Run Django tests
        working-directory: ./backend
        run: |
          source .venv/bin/activate
          pytest -vv


  build-backend:
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && github.actor != 'dependabot[bot]'
    needs: test-backend

    steps:
      - uses: actions/checkout@v3

      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: ghcr.io/sthorsten/casterdashboard2-backend
          tags: |
            type=ref,event=branch
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
            type=semver,pattern={{major}}
            type=sha

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GHCR_ACCESS_TOKEN }}

      - name: Build and push image
        uses: docker/build-push-action@v4
        with:
          context: ./backend
          push: true
          tags: ${{ steps.meta.outputs.tags }}


  build-frontend:
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && github.actor != 'dependabot[bot]'
    needs: test-backend

    steps:
      - uses: actions/checkout@v3

      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: ghcr.io/sthorsten/casterdashboard2-frontend
          tags: |
            type=ref,event=branch
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
            type=semver,pattern={{major}}
            type=sha

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GHCR_ACCESS_TOKEN }}

      - name: Build and push image
        uses: docker/build-push-action@v4
        with:
          context: ./frontend
          push: true
          tags: ${{ steps.meta.outputs.tags }}

  build-nginx:
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && github.actor != 'dependabot[bot]'
    needs: test-backend

    steps:
      - uses: actions/checkout@v3

      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: ghcr.io/sthorsten/casterdashboard2-nginx
          tags: |
            type=ref,event=branch
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
            type=semver,pattern={{major}}
            type=sha

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GHCR_ACCESS_TOKEN }}

      - name: Build and push image
        uses: docker/build-push-action@v4
        with:
          context: ./docker-nginx
          push: true
          tags: ${{ steps.meta.outputs.tags }}
